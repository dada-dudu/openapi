openapi: 3.0.0
info:
  title: Python Scheduler
  description: >-
    The official SeaTable API Reference (OpenAPI 3.0).
  version: "4.2"
servers:
  - url: "https://{server}"
    variables:
      server:
        default: cloud.seatable.io

x-readme:
  explorer-enabled: true
  metrics-enabled: false
  proxy-enabled: false

components:
  securitySchemes:
    PythonSchedulerAuth:
      type: http
      scheme: bearer
      description: This is the [Python-Scheduler-Token](/reference/authentication).

  parameters:
    month:
      name: month
      in: query
      schema:
        type: integer
        pattern: ^[0-9]{4}-((0[1-9])|1[0-2])$
      description: >-
        For which month you'd like to list the statistics in the format of
        YYYY-MM.
      example: "2023-06"
      required: false
    order_by:
      name: order_by
      in: query
      schema:
        type: string
        enum: ["total_run_count", "total_run_time"]
        default: ""
      required: true
      description: The ...
      example: "total_run_count"
    page:
      name: page
      description: The page number you want to start showing the entries. If no value is provided, 1 will be used.
      in: query
      schema:
        type: integer
        minimum: 1
      example: 1
      required: false
    per_page:
      name: per_page
      in: query
      schema:
        type: integer
        minimum: 1
      description: The number of results that should be returned. If no value is provided, 25 results will be returned.
      example: 25
      required: false

paths:
  /admin/statistics/scripts-running/by-user/:
    get:
      tags:
        - Statistics
      summary: Script runs by user
      security:
        - PythonSchedulerAuth: []
      parameters:
        - $ref: "#/components/parameters/month"
        - $ref: "#/components/parameters/order_by"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/per_page"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - email: 1234567866874f15bd5b17afc3527754@auth.local
                    name: admin
                    contact_email: admin@example.com
